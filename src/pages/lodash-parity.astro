---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro'
import { Markdown } from '@astropub/md'
import { createClient } from '@supabase/supabase-js'

// Initialize Supabase client
const supabase = createClient(
  import.meta.env.SUPABASE_URL,
  import.meta.env.SUPABASE_ANON_KEY
)

// Fetch all rows from the lodash_parity table
const {
  data,
  error,
}: {
  data:
    | {
        name: string
        status: 'yes' | 'no' | '100' | 'soon' | null
        weekly_downloads_num: number
        notes: string | null
      }[]
    | null
  error: any
} = await supabase.from('lodash_parity').select('*')

if (!data) {
  throw Error('Error fetching parity data: ' + error.stack)
}

// Sort by most popular
data.sort((a, b) => b.weekly_downloads_num - a.weekly_downloads_num)

function getColorofRelvance(relevance: number) {
  // Color range: orange (30°) -> yellow (60°) -> green (120°) as relevance goes from 0 to 1
  const hue = 50 + Math.min(70, relevance * 70) // 30-120 degrees
  const saturation = 100 // Always fully saturated
  const lightness = 50 // Constant lightness for vibrant colors
  return `hsl(${hue}, ${saturation}%, ${lightness}%)`
}
---

<StarlightPage frontmatter={{ title: 'Lodash Parity' }}>
  <p class="mb-20">
    The circles like <circle-progress
      class="small inline-block !mt-0 translate-y-18% mx-1"
      animation="none"
      style={`--ring-color: ${getColorofRelvance(80)};`}
      value={80}
      max="100"
      text-format="value"></circle-progress> to the right of the function name represent
    the <strong>relative popularity</strong> of the function. The <code
      >merge</code
    > function has the most weekly downloads of any Lodash function, hence its rating
    of 100 out of 100.
  </p>
  {
    data ? (
      <ul class="!px-12">
        {data.map(item => {
          const relevance = Math.round(
            Math.pow(
              item.weekly_downloads_num / data[0].weekly_downloads_num,
              0.14
            ) * 100
          )

          const relevanceColor = getColorofRelvance(
            item.weekly_downloads_num / data[0].weekly_downloads_num
          )

          return (
            <li class="py-6">
              <h2 class="relative flex flex-row">
                <img
                  src={`/parity/${item.status}.svg`}
                  class="w-14 h-14 !absolute top-0 left--8 translate-x--100% translate-y--0.3rem"
                />
                {item.name}
                <div class="flex-1" />
                <circle-progress
                  class="inline-block !mt-0 ml-1rem translate--y-0.1rem"
                  animation="none"
                  style={`--ring-color: ${relevanceColor};`}
                  value={relevance}
                  max="100"
                  text-format="value"
                />
              </h2>
              <div class="notes">
                {item.notes ? (
                  <Markdown of={item.notes} />
                ) : (
                  <p>
                    {
                      {
                        no: (
                          <em>
                            This function was rejected due to its
                            incompatibility with the ethos of Radashi.
                          </em>
                        ),
                        yes: <em>No differences have been noted.</em>,
                        soon: <em>This function is being worked on.</em>,
                        '100': (
                          <em>
                            This function is identical to the original Lodash
                            function.
                          </em>
                        ),
                        null: (
                          <em>
                            This function may or may not be implemented in the
                            future.
                          </em>
                        ),
                      }['' + item.status]
                    }
                  </p>
                )}
              </div>
              <hr />
            </li>
          )
        })}
      </ul>
    ) : (
      <p>Error loading data</p>
    )
  }
  <p>
    <em
      >If a Lodash function is missing, it's because it has {'<'} 10,000 weekly downloads.</em
    >
  </p>
</StarlightPage>

<script>
  import 'js-circle-progress'
</script>

<style is:global>
  .notes li {
    list-style: disc;
  }
</style>

<style>
  li hr {
    width: 100%;
    border: 1px solid rgba(128, 128, 128, 0.3) !important;
    margin-top: 8rem !important;
    margin-bottom: 4rem !important;
  }

  h2 {
    margin-top: 0;
  }

  circle-progress.small::part(base) {
    width: 1.6rem;
    height: 1.6rem;
  }

  circle-progress::part(base) {
    width: 3.4rem;
    height: 3.4rem;
  }

  circle-progress::part(circle) {
    stroke: rgba(128, 128, 128, 0.4);
  }

  circle-progress::part(value) {
    stroke: var(--ring-color);
    stroke-width: 8px;
  }

  circle-progress::part(text) {
    font:
      2rem Figtree,
      sans-serif;
    font-weight: 600;
    fill: white;
  }
</style>
